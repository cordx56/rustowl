# Maintainer: MuntasirSZN <muntasir.joypurhat@gmail.com>
# Maintainer: cordx56 <cordx56@cordx.cx>

pkgname=rustowl-git
pkgver=r1.0
pkgrel=1
pkgdesc='Visualize Ownership and Lifetimes in Rust'
url='https://github.com/cordx56/rustowl'
license=('MPL-2.0')
makedepends=('git' 'rustup' 'gcc' 'make' 'autoconf' 'automake' 'libtool' 'cmake' 'ninja' 'go' 'openssl' 'glibc' 'gcc-libs' 'pkgconf' 'perl' 'clang' 'llvm' 'nasm' 'jemalloc')

_build_deps=(
    'bindgen-cli'
)
arch=('any')
source=("git+https://github.com/cordx56/rustowl.git")
sha256sums=('SKIP')
conflicts=('rustowl-bin' 'rustowl')

pkgver() {
    cd "$srcdir/rustowl"
    printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
    cd "$srcdir/rustowl"
    export RUSTC_BOOTSTRAP=1
    export RUSTUP_TOOLCHAIN=1.88.0
    rustup component add rust-src rustc-dev llvm-tools
    
    # Install bindgen-cli for aws-lc-sys
    for dep in "${_build_deps[@]}"; do
        cargo install --force --locked "$dep"
    done
    
    cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
    cd "$srcdir/rustowl"
    export RUSTC_BOOTSTRAP=1
    export RUSTUP_TOOLCHAIN=1.88.0
    export RUSTOWL_RUNTIME_DIRS=/opt/rustowl
    
    # Configure environment for aws-lc-sys build
    export CC=gcc
    export CXX=g++
    export CMAKE_C_COMPILER=gcc
    export CMAKE_CXX_COMPILER=g++
    export AWS_LC_SYS_CMAKE_BUILDER=1
    export CMAKE_BUILD_TYPE=Release
    export AWS_LC_SYS_STATIC=1
    export AWS_LC_SYS_NO_PREFIX=1
    
    # Configure bindgen for aws-lc-sys
    export BINDGEN_EXTRA_CLANG_ARGS="-I/usr/include"
    export LIBCLANG_PATH=/usr/lib
    
    # Force jemalloc to use system library with extended API
    export JEMALLOC_SYS_WITH_LG_PAGE=16
    export JEMALLOC_SYS_WITH_MALLOC_CONF="background_thread:true"
    export JEMALLOC_SYS_BACKGROUND_THREAD=1
    export CARGO_FEATURE_UNPREFIXED_MALLOC_ON_SUPPORTED_PLATFORMS=1
    
    # Link against system jemalloc
    export RUSTFLAGS="-L /usr/lib -l jemalloc"
    
    # Ensure proper library search paths
    export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
    export LIBRARY_PATH=/usr/lib:/lib
    export LD_LIBRARY_PATH=/usr/lib:/lib
    
    cargo build --frozen --release --all-features --target "$(rustc --print=host-tuple)"
}

check() {
    cd "$srcdir/rustowl"
    export RUSTC_BOOTSTRAP=1
    export RUSTUP_TOOLCHAIN=1.88.0
    cargo test --frozen --all-features
}

package() {
    cd "$srcdir/rustowl"
    find target -type d | grep -E 'rustowl-build-time-out$' | xargs -I % cp -r % ./
    mkdir sysroot
    ACTIVE_TOOLCHAIN="$(rustup show active-toolchain | awk '{ print $1 }')"
    cp -r "$(rustc --print=sysroot)" sysroot/"$ACTIVE_TOOLCHAIN"
    find sysroot -type f | grep -v -E '\.(rlib|so|dylib|dll)$' | xargs rm -rf
    find sysroot -depth -type d -empty -exec rm -rf {} \;
    install -d -m 755 "$pkgdir/opt/rustowl"
    cp -a sysroot/ "$pkgdir/opt/rustowl/"
    install -Dm0755 -t "$pkgdir/usr/bin/" "target/$(rustc --print=host-tuple)/release/rustowl"
    install -Dm0755 -t "$pkgdir/usr/bin/" "target/$(rustc --print=host-tuple)/release/rustowlc"
    install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/rustowl/LICENSE"
    install -Dm644 rustowl-build-time-out/man/rustowl.1 "$pkgdir/usr/share/man/man1/rustowl.1"
    install -Dm644 "rustowl-build-time-out/completions/rustowl.bash" "${pkgdir}/usr/share/bash-completion/completions/rustowl"
    install -Dm644 "rustowl-build-time-out/completions/_rustowl" "${pkgdir}/usr/share/zsh/site-functions/_rustowl"
    install -Dm644 "rustowl-build-time-out/completions/rustowl.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/rustowl.fish"
    install -Dm644 "rustowl-build-time-out/completions/rustowl.elv" "${pkgdir}/usr/share/elvish/completions/rustowl.elv"
    install -Dm644 "rustowl-build-time-out/completions/_rustowl.ps1" "${pkgdir}/usr/share/powershell/Modules/Rustowl/_rustowl.ps1"
}
